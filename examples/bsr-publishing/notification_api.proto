syntax = "proto3";

package myorg.notification.v1;

import "user_api.proto";

option go_package = "github.com/myorg/protos/notification/v1;notificationv1";

// Notification management API
service NotificationService {
  // Send a notification
  rpc SendNotification(SendNotificationRequest) returns (SendNotificationResponse);
  
  // Get notification by ID
  rpc GetNotification(GetNotificationRequest) returns (GetNotificationResponse);
  
  // Mark notification as read
  rpc MarkAsRead(MarkAsReadRequest) returns (MarkAsReadResponse);
  
  // List user notifications
  rpc ListNotifications(ListNotificationsRequest) returns (ListNotificationsResponse);
  
  // Update notification preferences
  rpc UpdatePreferences(UpdatePreferencesRequest) returns (UpdatePreferencesResponse);
}

// Notification types
enum NotificationType {
  NOTIFICATION_TYPE_UNSPECIFIED = 0;
  NOTIFICATION_TYPE_EMAIL = 1;
  NOTIFICATION_TYPE_SMS = 2;
  NOTIFICATION_TYPE_PUSH = 3;
  NOTIFICATION_TYPE_IN_APP = 4;
}

// Notification priority
enum NotificationPriority {
  NOTIFICATION_PRIORITY_UNSPECIFIED = 0;
  NOTIFICATION_PRIORITY_LOW = 1;
  NOTIFICATION_PRIORITY_NORMAL = 2;
  NOTIFICATION_PRIORITY_HIGH = 3;
  NOTIFICATION_PRIORITY_URGENT = 4;
}

// Notification status
enum NotificationStatus {
  NOTIFICATION_STATUS_UNSPECIFIED = 0;
  NOTIFICATION_STATUS_PENDING = 1;
  NOTIFICATION_STATUS_SENT = 2;
  NOTIFICATION_STATUS_DELIVERED = 3;
  NOTIFICATION_STATUS_READ = 4;
  NOTIFICATION_STATUS_FAILED = 5;
}

// Notification entity
message Notification {
  string id = 1;
  string user_id = 2;
  NotificationType type = 3;
  string title = 4;
  string message = 5;
  NotificationPriority priority = 6;
  NotificationStatus status = 7;
  map<string, string> data = 8;
  int64 created_at = 9;
  int64 sent_at = 10;
  int64 read_at = 11;
  int64 expires_at = 12;
}

// Notification preferences
message NotificationPreferences {
  string user_id = 1;
  bool email_enabled = 2;
  bool sms_enabled = 3;
  bool push_enabled = 4;
  bool in_app_enabled = 5;
  repeated string disabled_categories = 6;
  map<string, bool> category_preferences = 7;
}

// Send notification request
message SendNotificationRequest {
  oneof target {
    string user_id = 1;
    repeated string user_ids = 2;
  }
  NotificationType type = 3;
  string title = 4;
  string message = 5;
  NotificationPriority priority = 6;
  map<string, string> data = 7;
  string category = 8;
  int64 expires_at = 9;
}

// Send notification response
message SendNotificationResponse {
  repeated Notification notifications = 1;
  bool success = 2;
  string message = 3;
}

// Get notification request
message GetNotificationRequest {
  string id = 1;
}

// Get notification response
message GetNotificationResponse {
  Notification notification = 1;
}

// Mark as read request
message MarkAsReadRequest {
  string notification_id = 1;
}

// Mark as read response
message MarkAsReadResponse {
  bool success = 1;
}

// List notifications request
message ListNotificationsRequest {
  string user_id = 1;
  int32 page_size = 2;
  string page_token = 3;
  NotificationStatus status_filter = 4;
  NotificationType type_filter = 5;
  bool unread_only = 6;
}

// List notifications response
message ListNotificationsResponse {
  repeated Notification notifications = 1;
  string next_page_token = 2;
  int32 total_count = 3;
  int32 unread_count = 4;
}

// Update preferences request
message UpdatePreferencesRequest {
  string user_id = 1;
  NotificationPreferences preferences = 2;
}

// Update preferences response
message UpdatePreferencesResponse {
  NotificationPreferences preferences = 1;
}
