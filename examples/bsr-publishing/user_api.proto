syntax = "proto3";

package myorg.user.v1;

option go_package = "github.com/myorg/protos/user/v1;userv1";

// User management API
service UserService {
  // Create a new user
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  
  // Get user by ID
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  
  // Update user information
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  
  // Delete a user
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  
  // List users with pagination
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
}

// User entity
message User {
  // Unique user identifier
  string id = 1;
  
  // User's email address
  string email = 2;
  
  // User's display name
  string name = 3;
  
  // User's profile picture URL
  string avatar_url = 4;
  
  // User creation timestamp
  int64 created_at = 5;
  
  // User last update timestamp
  int64 updated_at = 6;
  
  // User status
  UserStatus status = 7;
  
  // User roles
  repeated string roles = 8;
}

// User status enumeration
enum UserStatus {
  USER_STATUS_UNSPECIFIED = 0;
  USER_STATUS_ACTIVE = 1;
  USER_STATUS_INACTIVE = 2;
  USER_STATUS_SUSPENDED = 3;
}

// Create user request
message CreateUserRequest {
  string email = 1;
  string name = 2;
  string avatar_url = 3;
  repeated string roles = 4;
}

// Create user response
message CreateUserResponse {
  User user = 1;
}

// Get user request
message GetUserRequest {
  string id = 1;
}

// Get user response
message GetUserResponse {
  User user = 1;
}

// Update user request
message UpdateUserRequest {
  string id = 1;
  string name = 2;
  string avatar_url = 3;
  UserStatus status = 4;
  repeated string roles = 5;
}

// Update user response
message UpdateUserResponse {
  User user = 1;
}

// Delete user request
message DeleteUserRequest {
  string id = 1;
}

// Delete user response
message DeleteUserResponse {
  bool success = 1;
}

// List users request
message ListUsersRequest {
  int32 page_size = 1;
  string page_token = 2;
  string filter = 3;
  string order_by = 4;
}

// List users response
message ListUsersResponse {
  repeated User users = 1;
  string next_page_token = 2;
  int32 total_count = 3;
}
