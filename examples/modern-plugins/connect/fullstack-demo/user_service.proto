syntax = "proto3";

package examples.modern.connect.demo;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/buck2-protobuf/examples/modern/connect/demo";

// UserService demonstrates modern Connect RPC patterns
service UserService {
  // Basic CRUD operations
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  
  // Server streaming for real-time updates
  rpc SubscribeUserUpdates(SubscribeUserUpdatesRequest) returns (stream UserUpdateEvent);
}

// User model with comprehensive validation
message User {
  int64 id = 1 [(buf.validate.field).int64.gt = 0];
  string email = 2 [(buf.validate.field).string.email = true];
  string username = 3 [(buf.validate.field).string = {
    pattern: "^[a-zA-Z0-9_]{3,30}$",
    min_len: 3,
    max_len: 30
  }];
  string display_name = 4 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 100
  }];
  string avatar_url = 5 [(buf.validate.field).string = {
    pattern: "^https://.*",
    ignore: IGNORE_IF_UNPOPULATED,
    description: "Avatar URL must use HTTPS"
  }];
  UserStatus status = 6 [(buf.validate.field).enum.defined_only = true];
  repeated string tags = 7 [(buf.validate.field).repeated.max_items = 10];
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
}

enum UserStatus {
  USER_STATUS_UNSPECIFIED = 0;
  USER_STATUS_ACTIVE = 1;
  USER_STATUS_INACTIVE = 2;
  USER_STATUS_SUSPENDED = 3;
}

// Request/Response messages with validation

message GetUserRequest {
  int64 user_id = 1 [(buf.validate.field).int64.gt = 0];
}

message GetUserResponse {
  User user = 1;
}

message CreateUserRequest {
  string email = 1 [(buf.validate.field).string.email = true];
  string username = 2 [(buf.validate.field).string = {
    pattern: "^[a-zA-Z0-9_]{3,30}$",
    min_len: 3,
    max_len: 30
  }];
  string display_name = 3 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 100
  }];
  string avatar_url = 4 [(buf.validate.field).string = {
    pattern: "^https://.*",
    ignore: IGNORE_IF_UNPOPULATED
  }];
  repeated string tags = 5 [(buf.validate.field).repeated.max_items = 10];
}

message CreateUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  int64 user_id = 1 [(buf.validate.field).int64.gt = 0];
  optional string email = 2 [(buf.validate.field).string.email = true];
  optional string username = 3 [(buf.validate.field).string = {
    pattern: "^[a-zA-Z0-9_]{3,30}$",
    min_len: 3,
    max_len: 30
  }];
  optional string display_name = 4 [(buf.validate.field).string = {
    min_len: 1,
    max_len: 100
  }];
  optional string avatar_url = 5 [(buf.validate.field).string = {
    pattern: "^https://.*",
    ignore: IGNORE_IF_UNPOPULATED
  }];
  repeated string tags = 6 [(buf.validate.field).repeated.max_items = 10];
  optional UserStatus status = 7 [(buf.validate.field).enum.defined_only = true];
}

message UpdateUserResponse {
  User user = 1;
}

message DeleteUserRequest {
  int64 user_id = 1 [(buf.validate.field).int64.gt = 0];
}

message DeleteUserResponse {
  bool success = 1;
}

message ListUsersRequest {
  int32 page_size = 1 [(buf.validate.field).int32 = {gte: 1, lte: 100}];
  string page_token = 2;
  string filter = 3 [(buf.validate.field).string.max_len = 200];
}

message ListUsersResponse {
  repeated User users = 1;
  string next_page_token = 2;
  int32 total_count = 3;
}

// Server streaming messages
message SubscribeUserUpdatesRequest {
  repeated int64 user_ids = 1 [(buf.validate.field).repeated = {
    min_items: 1,
    max_items: 100
  }];
}

message UserUpdateEvent {
  UserUpdateType type = 1;
  User user = 2;
  google.protobuf.Timestamp timestamp = 3;
}

enum UserUpdateType {
  USER_UPDATE_TYPE_UNSPECIFIED = 0;
  USER_UPDATE_TYPE_CREATED = 1;
  USER_UPDATE_TYPE_UPDATED = 2;
  USER_UPDATE_TYPE_DELETED = 3;
  USER_UPDATE_TYPE_STATUS_CHANGED = 4;
}
