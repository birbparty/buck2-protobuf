"""Modern protovalidate validation examples demonstrating runtime validation."""

load("//rules:proto.bzl", "proto_library")
load("//rules:protovalidate.bzl", "protovalidate_library", "proto_validate", "multi_language_protovalidate")

# Example proto library with modern protovalidate constraints
proto_library(
    name = "user_service_proto",
    srcs = ["example.proto"],
    deps = [
        "@protobuf//:timestamp_proto",
        "//third_party/buf:validate_proto",
    ],
    visibility = ["PUBLIC"],
)

# Go validation using protovalidate
protovalidate_library(
    name = "user_validation_go",
    proto = ":user_service_proto",
    language = "go",
    visibility = ["PUBLIC"],
)

# Python validation using protovalidate
protovalidate_library(
    name = "user_validation_python",
    proto = ":user_service_proto",
    language = "python",
    visibility = ["PUBLIC"],
)

# TypeScript validation using protovalidate
protovalidate_library(
    name = "user_validation_typescript",
    proto = ":user_service_proto",
    language = "typescript",
    visibility = ["PUBLIC"],
)

# Multi-language validation bundle
multi_language_protovalidate(
    name = "user_validation_all_languages",
    proto = ":user_service_proto",
    languages = ["go", "python", "typescript"],
    visibility = ["PUBLIC"],
)

# Modern validation combining buf CLI + protovalidate
proto_validate(
    name = "comprehensive_validation",
    srcs = [":user_service_proto"],
    validation_engine = "protovalidate",
    language = "go",
    buf_lint = True,
    visibility = ["PUBLIC"],
)

# Validation with BSR team caching enabled
protovalidate_library(
    name = "user_validation_cached",
    proto = ":user_service_proto",
    language = "go",
    bsr_cache = True,
    visibility = ["PUBLIC"],
)

# Example of validation with custom configuration
protovalidate_library(
    name = "user_validation_custom_config",
    proto = ":user_service_proto",
    language = "go",
    validation_config = {
        "strict_mode": "true",
        "fail_fast": "false",
    },
    visibility = ["PUBLIC"],
)

# Validation for all languages with both buf CLI and protovalidate
proto_validate(
    name = "validation_both_engines",
    srcs = [":user_service_proto"],
    validation_engine = "both",
    language = "go",
    buf_lint = True,
    visibility = ["PUBLIC"],
)
